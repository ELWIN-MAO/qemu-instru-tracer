                                                     指令频度统计使用和帮助文档
涉及到的机器：
web服务器：124.16.141.184  
功能：测试用例通过web上传，自动执行测试用例，展示测试结果

指令频度统计服务器：124.16.141.162
功能：运行QEMU模拟器，跟踪lubuntu12.04_x86_32系统，生成日志文件，并对日志文件进行统计处理，得到按线程统计的
指令频度和总的指令频度。

windowsPC:
安装vmware软件，用vmware安装lubuntu21.04操作系统形成成lubuntu12.04.vmdk这样的虚拟磁盘


日志处理程序是完全用python和shell脚本编写的，需要检查124.16.141.162是否安装了python解释器。


一、制作lubuntu12.04_32磁盘镜像（在windowsPC上面进行）
  (目前32位的lubuntu12.04能很好的在图形界面下工作，请使用这个版本的系统)
  lubuntu-12.04-desktop-i386.iso下载地址
  http://cdimage.ubuntu.com/lubuntu/releases/12.04/release/lubuntu-12.04-desktop-i386.iso
  由于qemu从一个空的虚拟磁盘开始安装系统十分缓慢，没法接受，所以选择用vmware虚拟机安装操作系统，生成lubuntu12.04.vmdk
  lubuntu12.04-s001.vmdk,lubuntu12.04-s002.vmdk,lubuntu12.04-s003.vmdk
  这样的虚拟磁盘。或者只有一个lubuntu12.04.vmdk文件


二、指令频度统计服务器端部署                                                         

1.
这台机器上的所有操作都是用root账号进行的，原因是mount命令需要root权限，而且进入虚拟磁盘也是需要root权限的。
再有默认都是在/home/myming目录下面工作的。如果不存在/home/myming这个目录可以用root账号登陆
mkdir /home/myming
由于使用了ssh来回传输文件之类的所以把目录都写死了，第一次复现结果不推荐在别的目录下面进行，等成功复现结果了以后，可以考虑将qemu-instru-tracer
移动到任意你想移动的目录，脚本程序中大部分都是使用的相对路径，需要修改的是hook.sh中的有关myming的变量。

还需要修改hook.sh和web服务器中的remote.sh中的ip地址为实际部署情况的ip地址。


部署经验：注意一步一步来，进行下一步前一定要check上一步的结果是否正常work。



2.将*.vmdk上传到124.16.141.162服务器
myming@ubuntu-xyong:~$ pwd
/home/myming


myming@ubuntu-xyong:~$ ls lubuntu/
lubuntu12.04.vmdk
lubuntu12.04-s001.vmdk
lubuntu12.04-s002.vmdk
.....


3. 
apt-get install git (如何没有安装git)
cd /home/myming
git clone https://github.com/xyongcn/qemu-instru-tracer

安装编译qemu依赖的软件包
apt-get install zlib1g-dev       libglib2.0-dev    libpixman-1-dev   autoconf   libtool  flex  bison     libsdl1.2-dev    libx11-dev

安装qemu
cd ./qemu-instru-tracer
./configure --target-list=i386-softmmu --prefix=/usr/local/qemu_mym  && make && make install
会安装QEMU到/usr/loacl/qemu_mym/目录下面

myming@ubuntu-xyong:~$ pwd
/home/myming

运行/usr/loacl/qemu_mym/qemu-system-i386   -hda  ./lubuntu/lubuntu12.04.vmdk   -boot c  -m 2048   -k en-us  -d exec,in_asm -D ./log-zml.txt
这样的命令即可以使用vmdk虚拟机。

3. 转换vmdk到raw格式
由于vmdk格式的虚拟磁盘不能直接在host中挂载读写，所以需要将vmdk转换为raw格式。
cd /home/myming/lubuntu

/usr/loacl/qemu_mym/qemu-img convert -f vmdk -O raw  lubuntu12.04.vmdk lubuntu12.04.raw

4.使用raw格式的磁盘
cd /home/myming
/usr/loacl/qemu_mym/qemu-system-i386   -hda  ./lubuntu/lubuntu12.04.raw   -boot c  -m 2048   -k en-us  -d exec,in_asm -D ./log-zml.txt
 
5.挂载读写raw格式的磁盘

5.1
cd /home/myming/lubuntu

fdisk  -l lubuntu12.04.raw

Disk lubuntu12.04.raw: 85.9 GB, 85899345920 bytes
255 heads, 63 sectors/track, 10443 cylinders, total 167772160 sectors
Units = 扇区 of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00004456

           设备 启动      起点          终点     块数   Id  系统
lubuntu12.04.raw1   *        2048   136718335    68358144   83  Linux
lubuntu12.04.raw2       136720382   152342527     7811073    5  扩展
lubuntu12.04.raw5       136720384   152342527     7811072   82  Linux 交换 / Solaris

算出第1个主分区的offset=2048*512=1048576
算出第2个扩展分区的offset=136720382*512             扩展分区没法挂载
扩展分区里面的第一个逻辑分区的offset=136720384*512  第一个逻辑分区是swap分区，也没有挂载意义。
其他分区的offset计算方法类似。


5.2
挂载第一个主分区。
cd /home/myming
mkdir rawmount
mount -o loop,offset=1048576   ./lubuntu/lubuntu12.04.raw  ./rawmount
cd rawmount下面即可以对第一个主分区中的内容进行读写操作。
操作完毕后离开挂载点并umount rawmount



6.lubuntu图形界面下自动登录特定账户
启动lubuntu
cd /home/myming

/usr/loacl/qemu_mym/qemu-system-i386   -hda  ./lubuntu/lubuntu12.04.raw   -boot c  -m 2048   -k en-us

6.1
以root账号登陆lubuntu
修改
/etc/lxdm/default.conf   
autologin=root #要登录的用户名 


6.2
修改
/etc/lightdm/lightdm.conf  
[SeatDefaults]  
autologin-user=root #要登录的用户名 
autologin-user-timeout=0  
greeter-session=lightdm-gtk-greeter  
user-session=Lubuntu  


7.lubuntu图形界面下，系统登录后自动执行程序

mkdir -p ~/.config/lxsession/Lubuntu/           

touch ~/.config/lxsession/Lubuntu/autostart 

编辑autostart
@/root/new/aaa.sh



其中@后面是要自动执行的脚本或者命令


/root/new/aaa.sh
内容如下：
#!/bin/bash
echo "start" > /root/new/bbb.txt                         
date >> /root/new/bbb.txt   
sleep 10
/usr/local/runScript -r /root/Documents/test.sikuli/     #执行skuli                         
echo "stop" >> /root/new/bbb.txt
shutdown -h now                                      #自动关机    



8.
使用root账号登陆服务器
cd /home/myming


myming@ubuntu-xyong:~$ pwd
/home/myming


myming@ubuntu-xyong:~$ ls
qemu-instru-tracer

9.
myming@ubuntu-xyong:~$ cd /home/myming/qemu-instru-tracer/deploy_help_doc/all_work_flow

myming@ubuntu-xyong:~/git_tijiao/all_work_flow$ pwd
/home/myming/qemu-instru-tracer/deploy_help_doc/all_work_flow

mv /home/mying/lubuntu  .


10.
cd /home/myming/qemu-instru-tracer/deploy_help_doc/all_work_flow/prog

运行./test_init.sh初始化环境（只需要运行一次）
./test_clean.sh清空上次的测试用例和测试结果

#==========================
#3.
#将测试用例xxxx.tar.gz拷贝到test_case目录中
#
#4.
#./start_all.sh 自动处理所有流程
#
#5.
#生成结果存放在./test_case目录当中。
#
#
#中途如果想停止
#./v_kill.sh 关掉所有的程序
#./v_clean.sh 清理中间结果，以及最后结果，只保留程序代码。
#==========================================
至此124.16.141.162机器上的指令频度的部署已经完成。


三、web服务器端部署
1.
需要在124.16.141.184机器上部署好web服务器，此服务器用于测试用例的上传
部署方法见：https://github.com/xyongcn/testcase_upload这个仓库

124.16.141.184机器上的/home/myming/remote.sh这个文件会自动通过ssh执行124.16.141.184上的hook.sh脚本。


2.
配置web服务器（124.16.141.184）和运行QEMU的服务器（124.16.141.162）可以相互无密码ssh root登录。
在124.16.141.184上
ssh-keygen –t rsa
一路回车
ssh-copy-id  –i  ~/.ssh/id_rsa.pub root@124.16.141.162

在124.16.141.162
ssh-keygen –t rsa
一路回车
ssh-copy-id  –i  ~/.ssh/id_rsa.pub root@124.16.141.184

四、开始测试
1.
在浏览器中输入以下地址
http://124.16.141.184:8080/UploadPage.jsp

2.
选择
version：linux-3.5.4  paltform:x86_32  testcase directory:testcase2 
单击change按钮
选择文件：
这里有一个准备好的测试用例（测试用例的制作方法见sikuli使用文档）
/home/myming/qemu-instru-tracer/deploy_help_doc/all_work_flow/test-music.sikuli.tar.gz
单击UploadFlie
文件上传成功后
单击Excute Test Script按钮即可执行测试用例。

3.
测试完成后web浏览器会显示测试结果。
